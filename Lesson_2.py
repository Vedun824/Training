fred = "Почему у горилл большие ноздри? Потому что у них толстые пальцы!"
print(fred)
# В этом примере показано присвоение переменной 'fred' значения строки.

fred = 'Что это: розовое и пушистое? Роозовый пушистик'
print(fred)
# В этом примере показано что при заключении строки в одинарные кавычки результат не изменится.

fred = '''Что едят на полдник динозавры
ТиРекс-кекс'''
print(fred)
# В этом примере показано как перенести строку с помощью использования трёх одинарных кавычек (''')

silly_string = '''"Тут что-то не так,не будь я д'Артаньян", - подумал он.'''
print(silly_string)
# Этот пример показывает как могут применяться одинарные тройные кавычки в строке для игнорирования используемых в ней внутренних кавычек.

single_quote_str = '"Тут что-то не так,не будь я д \'Артаньян", - подумал он.'
double_quote_str = "\"Тут что-то не так,не будь я д'Артаньян\", - подумал он."
print(single_quote_str)
print(double_quote_str)
# На этих примерах указаны варианты экранирования создающиеся через бэкслеш (\) для обхода внутренних кавычек.

myscore = 1000
message = 'Мой счёт: %s очков'
print(message % myscore)
# В этом примере показано использование переменной внутри строки с помощью "%s" и так-же показана позиция где именно нужно отобразить ту переменную.

joke_text = '%s: приспособление для поиска мебели в темноте'
bodypart1 = 'Коленка'
bodypart2 = 'Лодыжка'
print(joke_text % bodypart1)
print(joke_text % bodypart2)
# В этом примере показано применение оператора (%s) к первой переменной 'joke_text' и применение при выводе (%) для задействования второй или третьей переменной.

nums = 'Что сказало число %s числу %s? Славный поясок'
print(nums % (0, 8))
# В этом примере показано что в одной строке может применяться несколько операторов (%s) ВАЖНО: при выводе указывать значение в скобках именно в том же поряжке как и в строке.

print(10 * 'a')
# Показано умножение строки.

spaces = ' ' * 25
print('%s Задний переулок 12' % spaces)
print('%s Трясогузочья пустошь' % spaces)
print('%s Западный Всхрапшир' % spaces)
print()
print()
print('Уважаемый сэр')
print()
print('Хочу сообщить вам,что кое-где на крыше уборной')
print('Недостает кусков черепицы')
print('Думаю,прошлой ночью их сдуло внезапным порывом ветра.')
print()
print('С почтением')
print('Малькольм Конфузли')
# Данный пример показывает создание переменной 'spaces' и присвоение ей значения в 25 пробелов и использованием этой переменной для смещения первых 3 строк вправо
# на указанное в переменной значение.

print(1000 * 'слякоть')
# В этом примере показан спам через умножение строки.

wizard_list = ['паучьи лапки', 'жабий палец', 'глаз тритона', 'крыло летучей мыши', 'жир слизня', 'перхоть змеи']
print(wizard_list)
# В данном примере показан объект список.

print(wizard_list[2])
# В этой команде показана возможность вывода элемента списка через указание в квадратных скобках его порядкового номера в данном случае [2] ВАЖНО: отсчёт списка начинается с 0

wizard_list[2] = 'язык улитки'
print(wizard_list)
# В этом примере показана возможность замены элемента первоначального списка с помощью указания его порядкового номера и замены значения.

print(wizard_list[2:5])
# Тут показана возможность вывода из списка элементов только нужных порядковых номеров в данном случае 2-5 исполняется данное действие через команду [2:5] (сам элемент 5 не учитывается и является завершающим)

some_numbers = [1, 2, 5, 10, 20]
some_strings = ['Нож', 'отточен', 'точен', 'очень']
numbers_and_strings = [7, 'раз', 'отпей', 1, 'раз', 'отъешь']
print(numbers_and_strings)
# В списках можно хранить  различные типы данных: 1. Числа 2. Строки 3. Числа и строки вперемежку.

numbers = [1, 2, 3, 4, 5]
strings = ['хватит', 'циферки', 'считать']
mylist = [numbers, strings]
print(mylist)
# Пример использования списка с хранящимся в нём других списков (в данном случае: numbers-это числовой список, strings-строчный список,mylist-объединяющая конструкция)

wizard_list.append('медвежий коготь')
wizard_list.append('мандрагора')
wizard_list.append('болиголов')
wizard_list.append('болотный газ')
print(wizard_list)
# Данный пример показывает как с помощью функции (.append) можно добавлять в список новые элементы.

del wizard_list[5]
del wizard_list[8]
del wizard_list[7]
del wizard_list[6]
print(wizard_list)
# В данном примере показано как с помощью функции (del) можно удалить элемента из списка.

list1 = [1, 2, 3, 4, 5]
list2 = ['я', 'забрался', 'под', 'кровать']
print(list1 + list2)
# Пример объединения списков через оператор (+)

list1 = [1, 2, 3, 4]
list2 = ['я', 'мечтаю', 'о', 'пломбире']
list3 = list1 + list2
print(list3)
# Пример сложения списков с помощью оператора (+) и помещением их в третью переменную.

list1 = [1, 2]
print(list1 * 5)
# Пример умножения списка через оператор (*)
# Операторы (/ и -) не могут быть использованы при работе со списками.

fibs = (0, 1, 1, 2, 3)
print(fibs[3])
# Пример использования кортежа. ВАЖНО кортеж невозможно изменить после его создания!

favorite_sports = {'Ральф Уильямс': 'Футбол',
                   'Майкл Типпетт': 'Баскетбол',
                   'Эдвард Элгар': 'Бейсбол',
                   'Ребекка Кларк': 'Нетбол',
                   'Этель Смит': 'Бадминтон',
                   'Френк Бридж': 'Регби'}
print(favorite_sports['Ребекка Кларк'])
# Пример создания словаря по формату "ключ" - "значение" в данном выражении ключом является "Имя" значением "Вид спорта"

del favorite_sports['Этель Смит']
print(favorite_sports)
# Пример удаления  через (del) из словаря ключа и соот-но его значения.




